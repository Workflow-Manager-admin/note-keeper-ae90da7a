{"is_source_file": true, "format": "Python", "description": "This is a test file for the backend API, specifically testing the health endpoint of a Django application using Django REST Framework's APITestCase.", "external_files": ["rest_framework.test", "django.urls"], "external_methods": ["django.urls.reverse", "rest_framework.test.APITestCase.client.get", "rest_framework.test.APITestCase.assertEqual"], "published": [], "classes": [{"name": "HealthTests", "description": "Test case for verifying the health endpoint returns the expected response."}], "methods": [{"name": "test_health(self)", "description": "Sends a GET request to the 'Health' endpoint and checks that the response status is 200 and the message indicates the server is up.", "scope": "HealthTests", "scopeKind": "class"}], "calls": ["django.urls.reverse('Health')", "self.client.get(url)", "self.assertEqual(response.status_code, 200)", "self.assertEqual(response.data, {\"message\": \"Server is up!\"})"], "search-terms": ["APITestCase", "Health", "tests.py", "django.urls", "rest_framework"], "state": 2, "file_id": 4, "knowledge_revision": 50, "git_revision": "71621ed7c3893ab3bd9223cae882a5096bad1ced", "ctags": [{"_type": "tag", "name": "HealthTests", "path": "/home/kavia/workspace/code-generation/note-keeper-ae90da7a/backend/api/tests.py", "pattern": "/^class HealthTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "test_health", "path": "/home/kavia/workspace/code-generation/note-keeper-ae90da7a/backend/api/tests.py", "pattern": "/^    def test_health(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HealthTests", "scopeKind": "class"}], "hash": "b0c02c3b65708d78df1a568b3703f788", "format-version": 4, "code-base-name": "backend", "filename": "backend/api/tests.py", "revision_history": [{"50": "71621ed7c3893ab3bd9223cae882a5096bad1ced"}]}